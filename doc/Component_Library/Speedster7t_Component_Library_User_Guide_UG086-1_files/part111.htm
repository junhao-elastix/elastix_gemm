<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>ACX_CLKSWITCH (Clock Switch)</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part110.htm">&lt; Previous</a><span> | </span><a href="../Speedster7t_Component_Library_User_Guide_UG086-1.html">Contents</a><span> | </span><a href="part112.htm">Next &gt;</a></p><p class="s16" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark139">&zwnj;</a>ACX_CLKSWITCH (Clock Switch)<a name="bookmark151">&zwnj;</a></p><p style="padding-top: 5pt;text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 60pt;text-indent: 0pt;text-align: left;"><span><img width="526" height="230" alt="image" src="Image_159.jpg"/></span></p><p class="s18" style="padding-top: 11pt;text-indent: 0pt;text-align: center;">Figure 32: <span class="h4">ACX_CLKSWITCH Logic Symbol</span></p><p class="s3" style="padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">The ACX_CLKSWITCH component implements clock switching functionality that allows the output clock to be glitchlessly switched between two different clock inputs. The CLKSWITCH component implements the glitchless behavior by disabling the clock being switched <i>from </i>when that clock is at value 0, and then enabling the clock being switched <i>to </i>when that clock has a value of 0. In this way, the output clock never has a pulse that is narrower than the original clock or the new clock.</p><p class="s3" style="padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">There are three switching behaviors depending on the value of the <span class="s17">SYNCHRONIZE_SEL </span>parameter. For example, setting <span class="s17">SYNCHRONIZE_SEL </span>to a value of:</p><p class="s3" style="padding-top: 5pt;padding-left: 36pt;text-indent: -11pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_160.png"/></span><span class="s12"> </span>0 ensures the input <span class="s17">sel[] </span>for each clock is synchronized to the rising and then falling edge of the clock that it is selecting</p><p class="s3" style="padding-top: 5pt;padding-left: 36pt;text-indent: -11pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_161.png"/></span><span class="s12"> </span>1 synchronizes the input <span class="s17">sel[] </span>signal to the falling edge followed by the next falling edge of the clock that it is selecting</p><p class="s3" style="padding-top: 5pt;padding-left: 36pt;text-indent: -11pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_162.png"/></span><span class="s12"> </span>2 synchronizes <span class="s17">sel[] </span>to a single falling edge of the clock it is selecting. A value of 2 should only be used when the input <span class="s17">sel[] </span>signal is synchronized to both <span class="s17">clk_in[0] </span>and <span class="s17">clk_in[1]</span>.</p><p class="s3" style="padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">To ensure glitchless operation, set <span class="s17">SYNCHRONIZE_SEL </span>to the appropriate value to meet timing requirements and ensure that each bit of <span class="s17">sel[] </span>is synchronized to the clock that it is used to select.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="672" height="126" alt="image" src="Image_163.png"/></span></p><div class="textbox" style="border:0.8pt solid #9EB6D3;display:block;min-height:93.5pt;width:503.2pt;"><p class="s23" style="padding-top: 4pt;padding-left: 30pt;text-indent: 0pt;text-align: left;">Note</p><p class="s24" style="padding-top: 6pt;padding-left: 30pt;text-indent: 0pt;text-align: left;">When simulating the ACX_CLKSWITCH component, if the transition on the <span class="s45">sel[] </span>input signal and the transition on one of the input clocks arrive at the same moment, the time that it takes for the <span class="s45">sel[] </span>transition to have an effect is dependent on the simulator&#39;s scheduling of events and may vary with different simulators, different designs, and different simulation models.</p><p class="s24" style="padding-top: 2pt;padding-left: 30pt;text-indent: 0pt;text-align: left;">Using <span class="s45">desel[] </span>when the input clock is toggling might cause a glitch or runt pulse on the output.</p></div><p style="text-indent: 0pt;text-align: left;"/><p class="s3" style="padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">If a clock is not toggling, then de-asserting the <span class="s17">sel[] </span>input bit for that clock does not deselect the clock. In this case, the <span class="s17">desel[] </span>input can be used to asynchronously force deselection of a clock input.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s18" style="padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">Table 71: <span class="h4">Parameter Descriptions</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:6.375pt" cellspacing="0"><tr style="height:35pt"><td style="width:94pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666" bgcolor="#A5E5BA"><p class="s21" style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Parameter</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666" bgcolor="#A5E5BA"><p class="s21" style="padding-top: 5pt;padding-left: 7pt;padding-right: 5pt;text-indent: -3pt;text-align: left;">Defined Values</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666" bgcolor="#A5E5BA"><p class="s21" style="padding-top: 5pt;padding-left: 9pt;padding-right: 5pt;text-indent: -5pt;text-align: left;">Default Value</p></td><td style="width:317pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666" bgcolor="#A5E5BA"><p class="s21" style="padding-top: 11pt;text-indent: 0pt;text-align: center;">Description</p></td></tr><tr style="height:60pt"><td style="width:94pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s27" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">PRESEL</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s22" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">0, 1, 2</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s22" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:317pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s22" style="padding-top: 6pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">The <span class="s27">PRESEL </span>parameter is used to determine the operation of the CLKSWITCH at startup time, to prevent the need for a clock switching event when the FPGA begins normal operation. The value of this parameter should match the startup value of the input <span class="s27">sel[1:0]</span>.</p></td></tr><tr style="height:122pt"><td style="width:94pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s27" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">SYNCHRONIZE_SEL</p></td><td style="width:47pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s22" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">0, 1, 2</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s22" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:317pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s22" style="padding-top: 6pt;padding-left: 4pt;padding-right: 9pt;text-indent: 0pt;text-align: justify;">The <span class="s27">SYNCHRONIZE_SEL </span>parameter determines how many half-cycle or full cycle synchronization stages are used to synchronize the inputs <span class="s27">sel [1:0]</span>:</p><p class="s22" style="padding-top: 2pt;padding-left: 4pt;padding-right: 11pt;text-indent: 0pt;text-align: justify;">0 – synchronizes the input <span class="s27">sel[1:0] </span>to the rising and then falling edge of the selected clock.</p><p class="s22" style="padding-left: 4pt;padding-right: 28pt;text-indent: 0pt;text-align: justify;">1 – synchronizes the input <span class="s27">sel[1:0] </span>to the falling edge and then a second falling edge of the selected clock (two falling edges).</p><p class="s22" style="padding-left: 4pt;padding-right: 30pt;text-indent: 0pt;text-align: justify;">2 – synchronizes the input <span class="s27">sel[1:0] </span>to a single falling edge of the selected clock.</p></td></tr></table><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s18" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">Table 72: <span class="h4">Pin Descriptions</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:6.375pt" cellspacing="0"><tr style="height:23pt"><td style="width:86pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666" bgcolor="#A5E5BA"><p class="s21" style="padding-top: 5pt;text-indent: 0pt;text-align: center;">Name</p></td><td style="width:40pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666" bgcolor="#A5E5BA"><p class="s21" style="padding-top: 5pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">Type</p></td><td style="width:377pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666" bgcolor="#A5E5BA"><p class="s21" style="padding-top: 5pt;text-indent: 0pt;text-align: center;">Description</p></td></tr><tr style="height:60pt"><td style="width:86pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s27" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">sel[1:0]</p></td><td style="width:40pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s22" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:377pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s22" style="padding-top: 6pt;padding-left: 4pt;padding-right: 1pt;text-indent: 0pt;text-align: left;">Assert <span class="s27">sel[0] </span>to drive the output clock from <span class="s27">clk_in[0] </span>and assert <span class="s27">sel[1] </span>to drive the output clock from <span class="s27">clk_in[1]</span>. If both bits of <span class="s27">sel[] </span>are de-asserted, the <span class="s27">clk_out </span>output stops toggling. Asserting both bits of <span class="s27">sel[] </span>at the same time results in unpredictable output.</p></td></tr><tr style="height:84pt"><td style="width:86pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s27" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">desel[1:0]<span class="s41">(1)</span></p></td><td style="width:40pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s22" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:377pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s22" style="padding-top: 6pt;padding-left: 4pt;padding-right: 1pt;text-indent: 0pt;text-align: left;">When switching from one input clock to another clock using <span class="s27">sel[]</span>, the first clock is synchronously disabled before the second clock is enabled. If the first clock is not toggling, it can not be synchronously disabled. The <span class="s27">desel[] </span>input provides a mechanism for deselecting a clock that is not toggling. Asserting <span class="s27">desel[n] </span>asynchronously deselects <span class="s27">clk_in[n]</span>, allowing <span class="s27">clk_in[n] </span>to be deselected even when it is not toggling.</p></td></tr><tr style="height:27pt"><td style="width:86pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s27" style="padding-top: 7pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">clk_in[1:0]<span class="s41">(2)</span></p></td><td style="width:40pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s22" style="padding-top: 8pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:377pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s22" style="padding-top: 8pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">Input clocks.</p></td></tr><tr style="height:27pt"><td style="width:86pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s27" style="padding-top: 7pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">clk_out<span class="s41">(2)</span></p></td><td style="width:40pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s22" style="padding-top: 8pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">Output</p></td><td style="width:377pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s22" style="padding-top: 8pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">Output clock.</p></td></tr><tr style="height:87pt"><td style="width:503pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666" colspan="3"><p style="padding-top: 6pt;text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="657" height="80" alt="image" src="Image_164.png"/></span></p><p class="s43" style="padding-left: 14pt;text-indent: 0pt;text-align: left;">Table Notes</p><p class="s22" style="padding-top: 2pt;padding-left: 29pt;text-indent: 0pt;text-align: left;"><span class="s44">1. </span>Using <span class="s27">desel[] </span>to deselect a clock while it is toggling can cause a glitch on the output clock</p><p class="s22" style="padding-top: 2pt;padding-left: 42pt;padding-right: 26pt;text-indent: -13pt;text-align: left;"><span class="s44">2. </span>Both <span class="s27">clk_in[1:0] </span>and <span class="s27">clk_out </span>must connect to clock tracks within the device. They cannot connect directly with data tracks.</p></td></tr></table><p class="s3" style="padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">The following timing diagrams shows how the SYNCHRONIZE_SEL parameter affects the output clock.</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 8pt;text-indent: 0pt;text-align: left;"><span><img width="660" height="183" alt="image" src="Image_165.jpg"/></span></p><p class="s18" style="padding-top: 10pt;text-indent: 0pt;text-align: center;">Figure 33: <span class="h4">SYNCHRONIZE_SEL = 0 Timing Diagram</span></p><p style="padding-top: 6pt;text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 8pt;text-indent: 0pt;text-align: left;"><span><img width="660" height="183" alt="image" src="Image_166.jpg"/></span></p><p class="s18" style="padding-top: 10pt;text-indent: 0pt;text-align: center;">Figure 34: <span class="h4">SYNCHRONIZE_SEL = 1 Timing Diagram</span></p><p style="padding-top: 6pt;text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 8pt;text-indent: 0pt;text-align: left;"><span><img width="660" height="183" alt="image" src="Image_167.jpg"/></span></p><p class="s18" style="padding-top: 10pt;text-indent: 0pt;text-align: center;">Figure 35: <span class="h4">SYNCHRONIZE_SEL = 2 Timing Diagram</span></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part112.htm">Constraints</a><a class="toc0" href="part113.htm">Instantiation Templates</a><a class="toc1" href="part114.htm">Verilog</a><a class="toc1" href="part115.htm">VHDL</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part110.htm">&lt; Previous</a><span> | </span><a href="../Speedster7t_Component_Library_User_Guide_UG086-1.html">Contents</a><span> | </span><a href="part112.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
