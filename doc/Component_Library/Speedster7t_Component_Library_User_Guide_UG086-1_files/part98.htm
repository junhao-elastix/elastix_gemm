<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Verilog</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part97.htm">&lt; Previous</a><span> | </span><a href="../Speedster7t_Component_Library_User_Guide_UG086-1.html">Contents</a><span> | </span><a href="part99.htm">Next &gt;</a></p><h3 style="padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark120">&zwnj;</a>Verilog</h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">ACX_SHIFTREG #(</p><p style="padding-top: 1pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">.W   (<span style=" color: #090;">32</span>),     <span style=" color: #008100;">// Data is 32 bit wide</span></p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.N   (<span style=" color: #090;">3</span>),     <span style=" color: #008100;">// 3 taps</span></p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.TAPS  ([<span style=" color: #090;">3</span>, <span style=" color: #090;">5</span>, <span style=" color: #090;">7</span>]),  <span style=" color: #008100;">// Taps at 3 cycles, 5 cycles, and 7 cycles</span></p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.MODE  ([<span style=" color: #090;">0</span>,<span style=" color: #090;">0</span>,<span style=" color: #090;">0</span>])   <span style=" color: #008100;">// Rising clock edge only.</span></p><p style="padding-top: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">) instance_name (</p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.clk  (user_clock),</p><p style="padding-top: 1pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">.rstn (user_reset_n),</p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.en  (user_en),</p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.din  (user_din),</p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.dout (user_out_array)</p><p style="padding-top: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">);</p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">ACX_SHIFTREG #(</p><p style="padding-top: 1pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">.W   (<span style=" color: #090;">32</span>),     <span style=" color: #008100;">// Data is 32 bit wide</span></p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.N   (<span style=" color: #090;">3</span>),     <span style=" color: #008100;">// 3 taps</span></p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.TAPS  ([<span style=" color: #090;">3</span>, <span style=" color: #090;">5</span>, <span style=" color: #090;">7</span>]),  <span style=" color: #008100;">// Taps at 3 cycles, 5 cycles, and 7 cycles</span></p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.MODE  ([<span style=" color: #090;">0</span>,<span style=" color: #090;">0</span>,<span style=" color: #090;">0</span>])   <span style=" color: #008100;">// Rising clock edge only.</span></p><p style="padding-top: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">) instance_name (</p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.clk  (user_clock),</p><p style="padding-top: 1pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">.rstn (user_reset_n),</p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.en  (user_en),</p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.din  (user_din),</p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.dout (user_out_array)</p><p style="padding-top: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">);</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"/><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">ACX_SHIFTREG #(</p><p style="padding-top: 1pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">.W   (<span style=" color: #090;">32</span>),     <span style=" color: #008100;">// Data is 32 bit wide</span></p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.N   (<span style=" color: #090;">3</span>),     <span style=" color: #008100;">// 3 taps</span></p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.TAPS  ([<span style=" color: #090;">3</span>, <span style=" color: #090;">5</span>, <span style=" color: #090;">7</span>]),  <span style=" color: #008100;">// Taps at 3 cycles, 5 cycles, and 7 cycles</span></p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.MODE  ([<span style=" color: #090;">0</span>,<span style=" color: #090;">0</span>,<span style=" color: #090;">0</span>])   <span style=" color: #008100;">// Rising clock edge only.</span></p><p style="padding-top: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">) instance_name (</p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.clk  (user_clock),</p><p style="padding-top: 1pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">.rstn (user_reset_n),</p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.en  (user_en),</p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.din  (user_din),</p><p style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">.dout (user_out_array)</p><p style="padding-top: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">);</p><p style="text-indent: 0pt;text-align: left;"><span><img width="673" height="542" alt="image" src="Image_144.png"/></span></p><p style="text-indent: 0pt;text-align: left;">-- Type definition</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;">library ieee;</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;">use ieee.std_logic_1164.all; use ieee.numeric_std.all;</p><p style="text-indent: 0pt;text-align: left;">-- Type definition</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;">library ieee;</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;">use ieee.std_logic_1164.all; use ieee.numeric_std.all;</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">-- Type definition</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;">library ieee;</p><p style="text-indent: 0pt;line-height: 11pt;text-align: left;">use ieee.std_logic_1164.all; use ieee.numeric_std.all;</p><p class="s33" style="text-indent: 0pt;text-align: left;">package <span class="p">types_pkg is</span></p><p style="padding-top: 1pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">type int_array_t is array (natural range &lt;&gt;) of integer;</p><p style="text-indent: 9pt;line-height: 11pt;text-align: left;">type slv_2d_array_t is array (natural range &lt;&gt;, natural range &lt;&gt;) of std_logic; end <span class="s33">package</span>;</p><p class="s33" style="text-indent: 0pt;text-align: left;">package <span class="p">types_pkg is</span></p><p style="padding-top: 1pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">type int_array_t is array (natural range &lt;&gt;) of integer;</p><p style="text-indent: 9pt;line-height: 11pt;text-align: left;">type slv_2d_array_t is array (natural range &lt;&gt;, natural range &lt;&gt;) of std_logic; end <span class="s33">package</span>;</p><p style="text-indent: 0pt;text-align: left;"/><p class="s33" style="text-indent: 0pt;text-align: left;">package <span class="p">types_pkg is</span></p><p style="padding-top: 1pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">type int_array_t is array (natural range &lt;&gt;) of integer;</p><p style="text-indent: 9pt;line-height: 11pt;text-align: left;">type slv_2d_array_t is array (natural range &lt;&gt;, natural range &lt;&gt;) of std_logic; end <span class="s33">package</span>;</p><p style="text-indent: 0pt;line-height: 120%;text-align: left;">use work.types_pkg.all; component ACX_SHIFTREG</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;text-align: left;">generic( W, N</p><p style="text-indent: 0pt;line-height: 120%;text-align: left;">use work.types_pkg.all; component ACX_SHIFTREG</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;text-align: left;">generic( W, N</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;line-height: 120%;text-align: left;">use work.types_pkg.all; component ACX_SHIFTREG</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;text-align: left;">generic( W, N</p><p style="text-indent: 0pt;text-align: left;">TAPS, MODE</p><p style="text-indent: 0pt;text-align: left;">TAPS, MODE</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">TAPS, MODE</p><p style="text-indent: 0pt;text-align: left;">: integer;</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">: int_array_t );</p><p style="text-indent: 0pt;text-align: left;">: integer;</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">: int_array_t );</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">: integer;</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">: int_array_t );</p><p style="text-indent: 0pt;text-align: left;">port(  rstn, clk, en : in bit;</p><p style="text-indent: 0pt;text-align: left;">port(  rstn, clk, en : in bit;</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">port(  rstn, clk, en : in bit;</p><p style="text-indent: 0pt;text-align: left;">din</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">dout</p><p style="text-indent: 0pt;text-align: left;">din</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">dout</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">din</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">dout</p><p style="text-indent: 0pt;text-align: left;">: in std_ulogic_vector (W-<span style=" color: #090;">1 </span>downto <span style=" color: #090;">0</span>);</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">: out slv_2d_array_t (W-<span style=" color: #090;">1 </span>downto <span style=" color: #090;">0</span>, N-<span style=" color: #090;">1 </span>downto <span style=" color: #090;">0</span>) );</p><p style="text-indent: 0pt;text-align: left;">: in std_ulogic_vector (W-<span style=" color: #090;">1 </span>downto <span style=" color: #090;">0</span>);</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">: out slv_2d_array_t (W-<span style=" color: #090;">1 </span>downto <span style=" color: #090;">0</span>, N-<span style=" color: #090;">1 </span>downto <span style=" color: #090;">0</span>) );</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">: in std_ulogic_vector (W-<span style=" color: #090;">1 </span>downto <span style=" color: #090;">0</span>);</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">: out slv_2d_array_t (W-<span style=" color: #090;">1 </span>downto <span style=" color: #090;">0</span>, N-<span style=" color: #090;">1 </span>downto <span style=" color: #090;">0</span>) );</p><p style="text-indent: 0pt;text-align: left;">end component;</p><p style="text-indent: 0pt;text-align: left;">end component;</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">end component;</p><p style="text-indent: 0pt;line-height: 120%;text-align: left;">instance_name: ACX_SHIFTREG generic map (</p><p style="padding-left: 19pt;text-indent: 0pt;text-align: left;">W =&gt; <span style=" color: #090;">32</span>,</p><p style="padding-top: 1pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">N =&gt; <span style=" color: #090;">3</span>,</p><p style="text-indent: 0pt;line-height: 120%;text-align: left;">instance_name: ACX_SHIFTREG generic map (</p><p style="padding-left: 19pt;text-indent: 0pt;text-align: left;">W =&gt; <span style=" color: #090;">32</span>,</p><p style="padding-top: 1pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">N =&gt; <span style=" color: #090;">3</span>,</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;line-height: 120%;text-align: left;">instance_name: ACX_SHIFTREG generic map (</p><p style="padding-left: 19pt;text-indent: 0pt;text-align: left;">W =&gt; <span style=" color: #090;">32</span>,</p><p style="padding-top: 1pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">N =&gt; <span style=" color: #090;">3</span>,</p><p style="text-indent: 0pt;text-align: left;">TAPS =&gt; (<span style=" color: #090;">3</span>,<span style=" color: #090;">5</span>,<span style=" color: #090;">7</span>),</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">MODE =&gt; (<span style=" color: #090;">0</span>,<span style=" color: #090;">0</span>,<span style=" color: #090;">0</span>)</p><p style="text-indent: 0pt;text-align: left;">TAPS =&gt; (<span style=" color: #090;">3</span>,<span style=" color: #090;">5</span>,<span style=" color: #090;">7</span>),</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">MODE =&gt; (<span style=" color: #090;">0</span>,<span style=" color: #090;">0</span>,<span style=" color: #090;">0</span>)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">TAPS =&gt; (<span style=" color: #090;">3</span>,<span style=" color: #090;">5</span>,<span style=" color: #090;">7</span>),</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">MODE =&gt; (<span style=" color: #090;">0</span>,<span style=" color: #090;">0</span>,<span style=" color: #090;">0</span>)</p><p style="text-indent: 0pt;text-align: left;">-- Data is <span style=" color: #090;">32 </span>bit wide</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">-- <span style=" color: #090;">3 </span>taps</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">-- Taps at <span style=" color: #090;">3 </span>cycles, <span style=" color: #090;">5 </span>cycles, and <span style=" color: #090;">7 </span>cycles</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">-- Rising clock edge only</p><p style="text-indent: 0pt;text-align: left;">-- Data is <span style=" color: #090;">32 </span>bit wide</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">-- <span style=" color: #090;">3 </span>taps</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">-- Taps at <span style=" color: #090;">3 </span>cycles, <span style=" color: #090;">5 </span>cycles, and <span style=" color: #090;">7 </span>cycles</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">-- Rising clock edge only</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">-- Data is <span style=" color: #090;">32 </span>bit wide</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">-- <span style=" color: #090;">3 </span>taps</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">-- Taps at <span style=" color: #090;">3 </span>cycles, <span style=" color: #090;">5 </span>cycles, and <span style=" color: #090;">7 </span>cycles</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">-- Rising clock edge only</p><p style="text-indent: 0pt;text-align: left;">)</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">port map (</p><p style="padding-top: 1pt;padding-left: 19pt;text-indent: 0pt;line-height: 120%;text-align: left;">rstn =&gt; user_rstn, clk =&gt; user_clk,</p><p style="padding-left: 19pt;text-indent: 0pt;text-align: left;">en =&gt; user_en,</p><p style="text-indent: 0pt;text-align: left;">)</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">port map (</p><p style="padding-top: 1pt;padding-left: 19pt;text-indent: 0pt;line-height: 120%;text-align: left;">rstn =&gt; user_rstn, clk =&gt; user_clk,</p><p style="padding-left: 19pt;text-indent: 0pt;text-align: left;">en =&gt; user_en,</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">)</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;">port map (</p><p style="padding-top: 1pt;padding-left: 19pt;text-indent: 0pt;line-height: 120%;text-align: left;">rstn =&gt; user_rstn, clk =&gt; user_clk,</p><p style="padding-left: 19pt;text-indent: 0pt;text-align: left;">en =&gt; user_en,</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part97.htm">&lt; Previous</a><span> | </span><a href="../Speedster7t_Component_Library_User_Guide_UG086-1.html">Contents</a><span> | </span><a href="part99.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
