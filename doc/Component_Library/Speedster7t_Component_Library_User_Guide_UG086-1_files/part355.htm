<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>VHDL</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part354.htm">&lt; Previous</a><span> | </span><a href="../Speedster7t_Component_Library_User_Guide_UG086-1.html">Contents</a><span> | </span><a href="part356.htm">Next &gt;</a></p><h3 style="padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark477">&zwnj;</a>VHDL</h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="673" height="780" alt="image" src="Image_385.png"/></span></p><p style="padding-top: 9pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">port (</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">din         : in std_logic_vector( <span style=" color: #090;">143 </span>downto <span style=" color: #090;">0 </span>);</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">wrclk         : in std_logic;</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">rdclk         : in std_logic;</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">wren         : in std_logic;</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">rden         : in std_logic;</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">rstn         : in std_logic;</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">dout         : out std_logic_vector( <span style=" color: #090;">143 </span>downto <span style=" color: #090;">0 </span>);</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">sbit_error      : out std_logic_vector( <span style=" color: #090;">1 </span>downto <span style=" color: #090;">0 </span>);</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">dbit_error      : out std_logic_vector( <span style=" color: #090;">1 </span>downto <span style=" color: #090;">0 </span>);</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">almost_full      : out std_logic;</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">full         : out std_logic;</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">almost_empty     : out std_logic;</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">empty        : out std_logic;</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">write_error      : out std_logic;</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">read_error      : out std_logic</p><p style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">);</p><p style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">end component ACX_BRAM72K_FIFO;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 34pt;text-indent: 0pt;line-height: 120%;text-align: left;">-- VHDL Instantiation template <span class="s33">for </span>ACX_BRAM72K_FIFO instance_name : ACX_BRAM72K_FIFO</p><p style="padding-left: 34pt;text-indent: 0pt;text-align: left;">generic map (</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">aempty_threshold   =&gt; aempty_threshold,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;line-height: 120%;text-align: left;">afull_threshold    =&gt; afull_threshold, ecc_decoder_enable   =&gt; ecc_decoder_enable, ecc_encoder_enable   =&gt; ecc_encoder_enable, fwft_mode       =&gt; fwft_mode,</p><p style="padding-left: 54pt;text-indent: 0pt;text-align: left;">outreg_enable     =&gt; outreg_enable,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">rdclk_polarity    =&gt; rdclk_polarity,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">read_width      =&gt; read_width,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">sync_mode       =&gt; sync_mode,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">wrclk_polarity    =&gt; wrclk_polarity,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">write_width      =&gt; write_width</p><p style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">)</p><p style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">port map (</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">din         =&gt; user_din,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">wrclk        =&gt; user_wrclk,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">rdclk        =&gt; user_rdclk,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">wren         =&gt; user_wren,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">rden         =&gt; user_rden,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">rstn         =&gt; user_rstn,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">dout         =&gt; user_dout,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">sbit_error      =&gt; user_sbit_error,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">dbit_error      =&gt; user_dbit_error,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">almost_full      =&gt; user_almost_full,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">full         =&gt; user_full,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">almost_empty     =&gt; user_almost_empty,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">empty        =&gt; user_empty,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">write_error      =&gt; user_write_error,</p><p style="padding-top: 1pt;padding-left: 54pt;text-indent: 0pt;text-align: left;">read_error      =&gt; user_read_error</p><p style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">);</p><p style="padding-top: 5pt;text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part354.htm">&lt; Previous</a><span> | </span><a href="../Speedster7t_Component_Library_User_Guide_UG086-1.html">Contents</a><span> | </span><a href="part356.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
