<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Ports</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part357.htm">&lt; Previous</a><span> | </span><a href="../Speedster7t_Component_Library_User_Guide_UG086-1.html">Contents</a><span> | </span><a href="part359.htm">Next &gt;</a></p><p class="s25" style="padding-top: 18pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark480">&zwnj;</a>Ports<a name="bookmark549">&zwnj;</a></p><p class="s18" style="padding-top: 8pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">Table 208: <span class="h4">ACX_BRAM72K_SDP Pin Descriptions</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:6.375pt" cellspacing="0"><tr style="height:21pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666" bgcolor="#A5E5BA"><p class="s61" style="padding-top: 5pt;padding-left: 2pt;padding-right: 1pt;text-indent: 0pt;text-align: center;">Name</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666" bgcolor="#A5E5BA"><p class="s61" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Direction</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666" bgcolor="#A5E5BA"><p class="s61" style="padding-top: 5pt;text-indent: 0pt;text-align: center;">Description</p></td></tr><tr style="height:41pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 7pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">wrclk</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 6pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;padding-right: 7pt;text-indent: 0pt;text-align: left;">Write clock input. Write operations are fully synchronous and occur upon the active edge of the <span class="s64">wrclk </span>clock input when <span class="s64">wren </span>is asserted. The active edge of <span class="s64">wrclk </span>is determined by the <span class="s64">wrclk_polarity </span>parameter.</p></td></tr><tr style="height:22pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s64" style="padding-top: 6pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">wren</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">Write port enable. Assert <span class="s64">wren </span>high to perform a write operation.</p></td></tr><tr style="height:41pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 7pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">we[17:0]</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 6pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;padding-right: 4pt;text-indent: 0pt;text-align: left;">Write enable mask. There is one bit of <span class="s64">we[] </span>for each byte of <span class="s64">din </span>(byte width can be set to either 8 or 9 bits). Asserting each <span class="s64">we[] </span>bit causes the corresponding byte of <span class="s64">din </span>to be written to memory.</p><p class="s62" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">When using 72-bit width or smaller, only the lower 9 bits must be connected.</p></td></tr><tr style="height:31pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 2pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">wraddr[13:0]</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;padding-right: 7pt;text-indent: 0pt;text-align: left;">The <span class="s64">wraddr </span>signal determines which memory location is being written to. See the write port address and data bus mapping tables below for details.</p></td></tr><tr style="height:75pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">wrmsel</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;padding-right: 7pt;text-indent: 0pt;text-align: left;">Write support for advanced modes. Used in conjunction with <span class="s64">wraddr[11] </span>to set the following modes, {<span class="s64">wrmsel</span>, <span class="s64">wraddr[11]</span>}:</p><p class="s64" style="padding-top: 2pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">1&#39;b0<span class="s62">, </span>1&#39;bx <span class="s62">– normal mode. BRAM write-side operation.</span></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">1&#39;b1<span class="s62">, </span>1&#39;b0 <span class="s62">– remap depth mode. 9-bit bytes remapped to 8-bit bytes.</span></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">1&#39;b1<span class="s62">, </span>1&#39;b1 <span class="s62">– reserved.</span></p><p class="s78" style="padding-top: 2pt;padding-left: 4pt;text-indent: 0pt;text-align: left;"><a href="part376.htm#bookmark557" style=" color: #303030; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt;">See </a>Advanced Modes (see page 263) <span style=" color: #303030;">for full details of the operation.</span></p></td></tr><tr style="height:31pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 2pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">din[143:0]</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;padding-right: 7pt;text-indent: 0pt;text-align: left;">The <span class="s64">din </span>signal determines the data to write to the memory array during a write operation. See the write port address and data bus mapping tables below for details.</p></td></tr><tr style="height:41pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 7pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">rdclk</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 6pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;padding-right: 26pt;text-indent: 0pt;text-align: justify;">Read clock input. Read operations are fully synchronous and occur upon the active edge of the <span class="s64">rdclk </span>input when the <span class="s64">rden </span>signal is asserted. The active edge of <span class="s64">rdclk </span>is determined by the <span class="s64">rdclk_polarity </span>parameter.</p></td></tr><tr style="height:22pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s64" style="padding-top: 6pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">rden</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">Read port enable. Assert <span class="s64">rden </span>high to perform a read operation.</p></td></tr><tr style="height:31pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 2pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">rdaddr[13:0]</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;padding-right: 7pt;text-indent: 0pt;text-align: left;">The <span class="s64">rdaddr </span>signal determines which memory location to read from. See the read port address and data bus mapping tables below for details.</p></td></tr><tr style="height:75pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">rdmsel</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;padding-right: 7pt;text-indent: 0pt;text-align: left;">Read support for advanced modes. Used in conjunction with <span class="s64">rdaddr[11] </span>to set the following modes, {<span class="s64">rdmsel</span>, <span class="s64">rdaddr[11]</span>}:</p><p class="s64" style="padding-top: 2pt;padding-left: 4pt;text-indent: 0pt;text-align: left;">1&#39;b0<span class="s62">, </span>1&#39;bx <span class="s62">– normal mode. BRAM read-side operation.</span></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">1&#39;b1<span class="s62">, </span>1&#39;b0 <span class="s62">– remap mode. 9-bit bytes remapped to 8-bit bytes.</span></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">1&#39;b1<span class="s62">, </span>1&#39;b1 <span class="s62">– reserved.</span></p><p class="s78" style="padding-top: 2pt;padding-left: 4pt;text-indent: 0pt;text-align: left;"><a href="part376.htm#bookmark557" style=" color: #303030; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt;">See </a>Advanced Modes (see page 263) <span style=" color: #303030;">for full details of the operation.</span></p></td></tr><tr style="height:31pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 2pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">outlatch_rstn</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;padding-right: 7pt;text-indent: 0pt;text-align: left;">Output latch synchronous reset. When <span class="s64">outlatch_rstn </span>is asserted low, the value of the output latches are reset to 0.</p></td></tr><tr style="height:31pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 2pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">outreg_rstn</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;padding-right: 7pt;text-indent: 0pt;text-align: left;">Output register synchronous reset. When <span class="s64">outreg_rstn </span>is asserted low, the value of the output registers are reset to 0.</p></td></tr><tr style="height:42pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 7pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">outreg_ce</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 6pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Input</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;padding-right: 7pt;text-indent: 0pt;text-align: left;">Output register clock enable (active high). When <span class="s64">outreg_enable=1</span>, de-asserting <span class="s64">outreg_ce </span>causes the BRAM to keep the <span class="s64">dout </span>signal unchanged, independent of a read operation. When <span class="s64">outreg_enable=0</span>, <span class="s64">outreg_ce </span>input is ignored.</p></td></tr><tr style="height:41pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 7pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">dout[143:0]</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="padding-top: 6pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Output</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;padding-right: 7pt;text-indent: 0pt;text-align: left;">Read port data output. For read operations, the <span class="s64">dout </span>output is updated with the memory contents addressed by <span class="s64">rdaddr </span>if the <span class="s64">rden </span>port enable is active. See the read port address and data bus mapping tables below for details.</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:6.375pt" cellspacing="0"><tr style="height:21pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666" bgcolor="#A5E5BA"><p class="s61" style="padding-top: 5pt;padding-left: 2pt;padding-right: 1pt;text-indent: 0pt;text-align: center;">Name</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666" bgcolor="#A5E5BA"><p class="s61" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Direction</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666" bgcolor="#A5E5BA"><p class="s61" style="padding-top: 5pt;text-indent: 0pt;text-align: center;">Description</p></td></tr><tr style="height:62pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s64" style="padding-right: 2pt;text-indent: 0pt;text-align: center;">sbit_error[1:0]<span class="s65">(1)</span></p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Output</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;padding-right: 4pt;text-indent: 0pt;text-align: left;">Single-bit error (active high). The <span class="s64">sbit_error </span>signal is asserted during a read operation when <span class="s64">ecc_decoder_enable=1 </span>and a single-bit error is detected. In this case, the corrected word is output on the <span class="s64">dout </span>pins. The memory contents are not corrected by the error correction circuitry. The <span class="s64">sbit_error </span>signal is aligned with the associated read data word. When using 64-bit width, only <span class="s64">sbit_error[0] </span>should be used. <span class="s64">sbit_error[1] </span>is unused.</p></td></tr><tr style="height:71pt"><td style="width:91pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s64" style="padding-right: 2pt;text-indent: 0pt;text-align: center;">dbit_error[1:0]<span class="s65">(1)</span></p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s62" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">Output</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666"><p class="s62" style="padding-top: 5pt;padding-left: 4pt;padding-right: 7pt;text-indent: 0pt;text-align: left;">Dual-bit error (active high). The <span class="s64">dbit_error </span>signal is asserted during a read operation when <span class="s64">ecc_decoder_enable=1 </span>and two or more bit errors are detected. In the case of two or more bit errors, the uncorrected read data word is output on the <span class="s64">dout </span>pins. The <span class="s64">dbit_error </span>signal is aligned with the associated read data word. When using 64-bit width, only <span class="s64">dbit_error[0] </span>should be used.</p><p class="s64" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">dbit_error[1] <span class="s62">is unused.</span></p></td></tr><tr style="height:82pt"><td style="width:503pt;border-top-style:solid;border-top-width:1pt;border-top-color:#666666;border-left-style:solid;border-left-width:1pt;border-left-color:#666666;border-bottom-style:solid;border-bottom-width:1pt;border-bottom-color:#666666;border-right-style:solid;border-right-width:1pt;border-right-color:#666666" colspan="3"><p style="padding-top: 6pt;text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="660" height="78" alt="image" src="Image_394.png"/></span></p><p class="s66" style="padding-left: 12pt;text-indent: 0pt;text-align: left;">Table Notes</p><p class="s62" style="padding-top: 2pt;padding-left: 36pt;padding-right: 15pt;text-indent: -11pt;text-align: left;"><span class="s67">1. </span>ECC modes are only applicable with read and write widths of 64 and 128 bits. In these modes, bits [71:64] and [143:136] of the memory array are used to store the ECC parity bits. If ECC is enabled with other <span class="s64">read_width </span><a href="part371.htm#bookmark555" style=" color: #303030; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt;">settings, the respective data input and output on these memory array bits are ignored. Please see </a><a href="part371.htm#bookmark555" class="s77">ECC Modes of Operation (see page </a><span style=" color: #007D39;">262) </span>for full details of ECC operation and configuration.</p></td></tr></table><p style="padding-top: 4pt;text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part357.htm">&lt; Previous</a><span> | </span><a href="../Speedster7t_Component_Library_User_Guide_UG086-1.html">Contents</a><span> | </span><a href="part359.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
