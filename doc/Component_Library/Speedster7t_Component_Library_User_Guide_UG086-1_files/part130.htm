<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Block Floating Point</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part129.htm">&lt; Previous</a><span> | </span><a href="../Speedster7t_Component_Library_User_Guide_UG086-1.html">Contents</a><span> | </span><a href="part131.htm">Next &gt;</a></p><p class="s25" style="padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;"><a name="bookmark168">&zwnj;</a>Block Floating Point<a name="bookmark383">&zwnj;</a></p><p class="s3" style="padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">Block floating point (block fp) is not a number format <i>per se</i>, rather it is a method of processing a collection of floating-point numbers efficiently. The principle is that each floating-point number consists of a mantissa and an exponent. If the exponents are made the same (normalized), then the mantissas can be arithmetically combined in the same way as integer numbers. The result of the mantissa calculation can be recombined with the normalized exponent, resulting in a full floating-point result. During this process there are two semi-independent input formats involved:</p><p class="s12" style="padding-top: 5pt;padding-left: 24pt;text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_180.png"/></span> <span class="s3">The original floating-point format</span></p><p class="s12" style="padding-top: 5pt;padding-left: 24pt;text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_181.png"/></span> <span class="s3">The integer format used for the multiplication</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">There are a number of considerations when normalizing the exponent among a collection of floating-point numbers. The value of a floating-point number is</p><p class="s17" style="padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;">mantissa Ã— 2exponent <span class="s3">where </span>mantissa <span class="s3">is of the form 1.</span>fraction<span class="s3">.</span></p><p class="s3" style="padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">However, in order to increase accuracy for the same number of bits, the &#39;1&#39; is not stored, it is implicit. A floating- point number is stored as {<span class="s17">sign_bit, exponent, fraction</span>}.</p><p class="s3" style="padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">When converting from a floating-point value to a block floating-point value, firstly the &#39;1&#39; needs to be added to the fraction in order to give the full mantissa. The mantissa is then right-shifted, while incrementing the exponent, until the exponent has the desired value equivalent to the maximum exponent in the block. It is this shift process that requires the implicit &#39;1&#39; to firstly be re-inserted with the <span class="s17">fraction</span>; after shifting, the implicit &#39;1&#39; is no longer in the MSB position.</p><p class="s3" style="padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">The shifted mantissa plus sign bit must fit within the integer format that is used. If it is necessary to right-shift a significant amount, then precision is lost. It is possible to end up with 0 if the original exponent was small enough.</p><p class="s3" style="padding-top: 7pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">The choice of integer size, therefore, depends on the required precision and the range of exponent values that are to be processed together.</p><p style="padding-top: 6pt;text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part129.htm">&lt; Previous</a><span> | </span><a href="../Speedster7t_Component_Library_User_Guide_UG086-1.html">Contents</a><span> | </span><a href="part131.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
