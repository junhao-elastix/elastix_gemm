<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Simulating 2D NoC with DSM</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part70.htm">&lt; Previous</a><span> | </span><a href="../Speedster7t_2D_Network_on_Chip_User_Guide_UG089.html">Contents</a><span> | </span><a href="part72.htm">Next &gt;</a></p><p class="s13" style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark135">&zwnj;</a>Simulating 2D NoC with DSM<a name="bookmark144">&zwnj;</a></p><p style="padding-top: 7pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">ACE includes a full chip simulation model of each of the Speedster7t FPGAs, known as the Device Simulation Model (DSM). The DSM provides a full cycle-accurate model of the 2D NoC along with BFMs of the interface subsystems. The combination of the BFMs for the interface subsystems and the cycle-accurate 2D NoC creates a balance between faster compile and simulation times, while also accurately modeling latency and traffic congestion on the 2D NoC. If multiple NAPs are used in a design, simulating at this level is a critical step to understanding if there are bottlenecks in the 2D NoC usage and allows determining if the efficiency can improve by placing the NAPs on different rows or columns.</p><p style="padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">When using the DSM, the Achronix-defined text macro is then used to attach the NAP in the user design to the specific NAP location in the 2D NoC hierarchy. An example follows of how to instantiate the Speedster7t AC7t1500 FPGA, and to connect four types of NAPs in a design to specific NAP locations in the device.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s34" style="padding-top: 5pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">Full 2D NoC Simulation Binding NAPs</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 22pt;text-indent: 0pt;line-height: 120%;text-align: left;">//Instantiate Speedster7t1500 ac7t1500 ac7t1500( );</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">// horizontal NAP at col=1, row=3</p><p class="s35" style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">`ACX_BIND_NAP_HORIZONTAL(DUT.i_nap_row_3.i_nap_horizontal,1,3);</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">// vertical NAP at col=3, row=1</p><p class="s35" style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">`ACX_BIND_NAP_VERTICAL(DUT.i_nap_col_3.i_nap_vertical,3,1);</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">// AXI responder NAP at col=1, row=1 (south-west corner)</p><p class="s35" style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">`ACX_BIND_NAP_AXI_SLAVE(DUT.i_axi_responder_wrapper_in.i_axi_responder,1,1);</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">// AXI initiator NAP at col=9, row=8 (north-east corner)</p><p class="s35" style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">`ACX_BIND_NAP_AXI_MASTER(DUT.i_axi_bram_rsp.i_axi_initiator_nap.i_axi_initiator,9,8);</p><p class="s34" style="padding-top: 5pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">Full 2D NoC Simulation Binding NAPs</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 22pt;text-indent: 0pt;line-height: 120%;text-align: left;">//Instantiate Speedster7t1500 ac7t1500 ac7t1500( );</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">// horizontal NAP at col=1, row=3</p><p class="s35" style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">`ACX_BIND_NAP_HORIZONTAL(DUT.i_nap_row_3.i_nap_horizontal,1,3);</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">// vertical NAP at col=3, row=1</p><p class="s35" style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">`ACX_BIND_NAP_VERTICAL(DUT.i_nap_col_3.i_nap_vertical,3,1);</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">// AXI responder NAP at col=1, row=1 (south-west corner)</p><p class="s35" style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">`ACX_BIND_NAP_AXI_SLAVE(DUT.i_axi_responder_wrapper_in.i_axi_responder,1,1);</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">// AXI initiator NAP at col=9, row=8 (north-east corner)</p><p class="s35" style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">`ACX_BIND_NAP_AXI_MASTER(DUT.i_axi_bram_rsp.i_axi_initiator_nap.i_axi_initiator,9,8);</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"/><p class="s34" style="padding-top: 5pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">Full 2D NoC Simulation Binding NAPs</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 22pt;text-indent: 0pt;line-height: 120%;text-align: left;">//Instantiate Speedster7t1500 ac7t1500 ac7t1500( );</p><p style="padding-top: 1pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">// horizontal NAP at col=1, row=3</p><p class="s35" style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">`ACX_BIND_NAP_HORIZONTAL(DUT.i_nap_row_3.i_nap_horizontal,1,3);</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">// vertical NAP at col=3, row=1</p><p class="s35" style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">`ACX_BIND_NAP_VERTICAL(DUT.i_nap_col_3.i_nap_vertical,3,1);</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">// AXI responder NAP at col=1, row=1 (south-west corner)</p><p class="s35" style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">`ACX_BIND_NAP_AXI_SLAVE(DUT.i_axi_responder_wrapper_in.i_axi_responder,1,1);</p><p style="padding-top: 3pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">// AXI initiator NAP at col=9, row=8 (north-east corner)</p><p class="s35" style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">`ACX_BIND_NAP_AXI_MASTER(DUT.i_axi_bram_rsp.i_axi_initiator_nap.i_axi_initiator,9,8);</p><p class="s16" style="padding-top: 6pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a href="https://support.achronix.com/hc/en-us/articles/4405039082132-How-Do-I-Gain-Access-to-Confidential-Documents-" class="s3" target="_blank">For an example of using the DSM, refer to the </a><a href="https://support.achronix.com/hc/en-us/articles/4405039082132-How-Do-I-Gain-Access-to-Confidential-Documents-" class="s21" target="_blank">Speedster7t 2D NoC Reference Design Guide </a>(RD022)<span style=" color: #303030;">. This reference design provides example source code for instantiating and using NAPs, and includes a full testbench along with constraint and project files for implementation.</span></p><p style="padding-top: 6pt;text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part70.htm">&lt; Previous</a><span> | </span><a href="../Speedster7t_2D_Network_on_Chip_User_Guide_UG089.html">Contents</a><span> | </span><a href="part72.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
